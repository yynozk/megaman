class Map
  Image.register(:tileset, "data/cutman_stage_tile.png")

  MAP_WIDTH, MAP_HEIGHT = 64, 14
  TILE_WIDTH, TILE_HEIGHT, TILE_COUNT, TILE_COLUMNS = 32, 32, 36, 9
  MAP_CSV = [
    10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,14,8,14,4,11,4,5,
    10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,2,2,2,13,11,4,5,
    10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,14,1,2,3,8,11,4,5,
    10,10,10,10,10,10,10,26,27,10,10,10,10,10,10,10,10,10,10,10,10,10,10,26,27,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,5,11,15,14,14,15,15,15,15,15,4,5,
    10,10,10,10,10,10,10,35,36,10,10,10,10,10,10,10,10,10,10,10,10,10,10,35,36,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,5,11,5,8,8,5,4,5,4,5,4,5,
    15,15,15,15,15,11,15,15,15,15,11,15,10,10,15,15,15,15,15,15,15,11,15,15,15,15,11,15,10,10,15,15,10,10,10,10,10,10,10,10,26,27,10,10,10,10,10,10,10,10,10,10,5,11,13,14,14,13,13,13,4,5,4,5,
    13,13,13,13,13,11,13,13,10,10,11,10,10,10,10,10,13,13,13,13,13,11,13,13,10,10,11,10,10,10,10,10,10,15,15,10,10,10,10,10,35,36,10,10,10,10,10,10,10,10,10,10,5,11,14,8,14,14,8,14,4,5,4,5,
    16,16,16,14,14,11,8,14,10,10,26,27,10,10,10,10,16,16,16,14,14,11,8,14,10,10,26,27,10,10,10,10,10,10,10,10,10,10,15,15,15,15,10,10,10,10,10,10,10,10,10,10,5,11,14,14,14,8,1,3,4,5,4,5,
    17,17,17,14,14,11,14,14,10,10,35,36,10,10,10,10,17,17,17,14,14,11,14,14,10,10,35,36,10,10,10,10,10,10,10,10,10,10,4,5,4,5,10,10,15,15,10,10,10,10,10,10,5,11,15,15,15,14,14,14,4,5,4,5,
    8,14,2,14,14,11,14,14,26,27,26,27,10,10,10,10,8,14,2,14,14,11,14,14,26,27,26,27,10,10,10,10,10,10,10,10,15,15,4,5,4,5,10,10,4,5,10,10,10,10,10,10,13,13,13,7,13,14,14,15,4,5,4,5,
    14,14,14,14,14,11,14,8,35,36,35,36,10,10,10,10,14,14,14,14,14,11,14,8,35,36,35,36,10,10,10,10,10,10,10,10,4,5,4,5,4,5,10,10,4,5,15,15,10,10,10,10,8,14,2,3,8,14,8,5,4,5,4,5,
    15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,4,5,4,5,4,5,10,10,4,5,4,5,15,15,15,15,15,15,15,15,15,15,15,5,4,5,4,5,
    4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,10,10,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,
    4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,10,10,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5
  ]

  def self.create
    MapTile.init(Image[:tileset], TILE_COLUMNS, TILE_COUNT / TILE_COLUMNS)

    tiles = []
    MAP_CSV.each_with_index do |v, i|
      next if v == 0
      tile_index = v - 1
      collision = [3, 4, 14, 25, 26, 34, 35].include?(tile_index) ? true : false
      tiles << MapTile.new(i % MAP_WIDTH, (i / MAP_WIDTH).floor, tile_index, collision)
    end

    self.new(tiles)
  end


  attr_reader :tiles

  def initialize(tiles)
    @tiles = tiles
  end

  def offset=(offset)
    @tiles.map.each {|t| t.offset = offset }
  end
end
